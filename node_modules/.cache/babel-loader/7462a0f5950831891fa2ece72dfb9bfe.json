{"ast":null,"code":"var _jsxFileName = \"/home/wafaa/storefront/src/components/Products.js\";\n// import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { Card, CardContent, CardMedia, CardActions, Typography, Button } from \"@material-ui/core\";\n// // import Typography from \"@material-ui/core/Typography\";\n// // import { addToMyCart } from \"../store/ProductsStore\";\n// import { updateRemoteData } from \"../store/action\";\n// const stateMapProps = (state) => ({\n//   Prod: state.ProductReducer.listOfProducts,\n//   categories: state.CatReducer.categories,\n// });\n// const dispatchToProps = { updateRemoteData };\n// const styling = makeStyles({\n//   root: {\n//     maxWidth: 350,\n//     display: \"inline-block\",\n//     margin: 50,\n//   },\n//   media: {\n//     height: 245,\n//   },\n// });\n// function items(props) {\n//   // console.log(props);\n//   let calss = styling();\n//   return (\n//     <>\n//       {/* {props.Prod}  */}\n//       {/* <h1>Flowers</h1> */}\n//       <div className=\"cards\">\n//         {props.Prod.map((it, i) => {\n//           if (it.quantity === 0) {\n//             return;\n//           }\n//           return (\n//             <>\n//               <Card className={calss.root} key={i} id=\"cards\">\n//                 <CardMedia\n//                   className={calss.media}\n//                   image={it.image} />\n//                 <CardContent>\n//                   <Typography gutterBottom variant=\"h4\" >\n//                     {it.name}\n//                   </Typography>\n//                   <Typography variant=\"\" color=\"textSecondary\" component=\"p\">\n//                     {it.price}$\n//                   </Typography>\n//                 </CardContent>\n//                 <CardActions>\n//                   <Button size=\"small\" color=\"primary\"\n//                   onClick={() => props.updateRemoteData(it)}>\n//                     Add to Cart\n//                   </Button>\n//                   <Button size=\"small\" color=\"primary\">\n//                     View Details\n//                   </Button>\n//                 </CardActions>\n//               </Card>\n//             </>\n//           );\n//         })}\n//       </div>\n//     </>\n//   );\n// }\n// export default connect(stateMapProps, dispatchToProps)(items);\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, CardMedia, CardActions, Typography, Button } from \"@material-ui/core\";\nimport { updateRemoteData } from \"../store/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styling = makeStyles({\n  root: {\n    maxWidth: 350,\n    display: \"inline-block\",\n    margin: 50\n  },\n  media: {\n    height: 245\n  }\n});\n\nconst stateMapProps = state => ({\n  Pro: state.ProductReducer.productsList,\n  categories: state.CatReducer.categories\n});\n\nconst dispatchToProps = {\n  updateRemoteData\n};\n\nfunction Products(props) {\n  const classes = styling();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: props.Pro.map((item, idx) => {\n        if (item.inventory == 0) {\n          return;\n        }\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.root,\n            id: \"cards\",\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              className: classes.media,\n              image: item.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h5\",\n                component: \"h2\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                component: \"p\",\n                children: [item.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Price: \", item.price, \" $\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                component: \"p\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Quantity Available: \", item.inventory]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                onClick: () => props.updateRemoteData(item),\n                children: \"Add to Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = Products;\nexport default connect(stateMapProps, dispatchToProps)(Products);\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/wafaa/storefront/src/components/Products.js"],"names":["React","connect","makeStyles","Card","CardContent","CardMedia","CardActions","Typography","Button","updateRemoteData","styling","root","maxWidth","display","margin","media","height","stateMapProps","state","Pro","ProductReducer","productsList","categories","CatReducer","dispatchToProps","Products","props","classes","map","item","idx","inventory","image","name","description","price"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { Card, CardContent, CardMedia, CardActions, Typography, Button } from \"@material-ui/core\";\n// // import Typography from \"@material-ui/core/Typography\";\n// // import { addToMyCart } from \"../store/ProductsStore\";\n\n// import { updateRemoteData } from \"../store/action\";\n\n\n\n\n// const stateMapProps = (state) => ({\n\n//   Prod: state.ProductReducer.listOfProducts,\n//   categories: state.CatReducer.categories,\n// });\n\n// const dispatchToProps = { updateRemoteData };\n\n// const styling = makeStyles({\n//   root: {\n//     maxWidth: 350,\n//     display: \"inline-block\",\n//     margin: 50,\n//   },\n//   media: {\n//     height: 245,\n//   },\n// });\n\n// function items(props) {\n//   // console.log(props);\n//   let calss = styling();\n\n\n\n//   return (\n//     <>\n\n//       {/* {props.Prod}  */}\n//       {/* <h1>Flowers</h1> */}\n//       <div className=\"cards\">\n//         {props.Prod.map((it, i) => {\n//           if (it.quantity === 0) {\n//             return;\n//           }\n\n//           return (\n//             <>\n\n\n//               <Card className={calss.root} key={i} id=\"cards\">\n//                 <CardMedia\n//                   className={calss.media}\n//                   image={it.image} />\n//                 <CardContent>\n\n//                   <Typography gutterBottom variant=\"h4\" >\n//                     {it.name}\n//                   </Typography>\n\n//                   <Typography variant=\"\" color=\"textSecondary\" component=\"p\">\n//                     {it.price}$\n//                   </Typography>\n\n//                 </CardContent>\n\n//                 <CardActions>\n\n//                   <Button size=\"small\" color=\"primary\"\n//                   onClick={() => props.updateRemoteData(it)}>\n//                     Add to Cart\n//                   </Button>\n\n//                   <Button size=\"small\" color=\"primary\">\n//                     View Details\n//                   </Button>\n\n//                 </CardActions>\n//               </Card>\n\n\n//             </>\n//           );\n//         })}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default connect(stateMapProps, dispatchToProps)(items);\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, CardMedia, CardActions, Typography, Button } from \"@material-ui/core\";\nimport { updateRemoteData } from \"../store/action\";\n\n\nconst styling = makeStyles({\n  root: {\n    maxWidth: 350,\n    display: \"inline-block\",\n    margin: 50,\n  },\n  media: {\n    height: 245,\n  },\n});\n\n\nconst stateMapProps = (state) => ({\n  Pro: state.ProductReducer.productsList,\n  categories: state.CatReducer.categories,\n});\n\nconst dispatchToProps = { updateRemoteData };\n\n\nfunction Products(props) {\n  const classes = styling();\n\n  return (\n    <>\n      <div className=\"cards\" >\n\n\n\n        {props.Pro.map((item, idx) => {\n          if (item.inventory == 0) {\n            return;\n          }\n\n          return (\n            <>\n              <Card key={idx} className={classes.root} id=\"cards\" >\n                <CardMedia className={classes.media} image={item.image} />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {item.name}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\n                    {item.description}\n\n                    <br></br>\n\n                    <h3>\n                      Price: {item.price} $\n                    </h3>\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    <h3>\n                      Quantity Available: {item.inventory}\n                    </h3>\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => props.updateRemoteData(item)}\n                  >\n                    Add to Cart\n                  </Button>\n                  <Button size=\"small\" color=\"primary\">\n                    View Details\n                  </Button>\n                </CardActions>\n              </Card>\n            </>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\n\n\nexport default connect(stateMapProps, dispatchToProps)(Products);\n"]},"metadata":{},"sourceType":"module"}