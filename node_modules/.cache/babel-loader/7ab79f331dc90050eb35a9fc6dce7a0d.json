{"ast":null,"code":"var _jsxFileName = \"/home/wafaa/storefront/src/components/Products.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { Card, CardContent, CardMedia, CardActions, Typography, Button } from \"@material-ui/core\";\n// // import Typography from \"@material-ui/core/Typography\";\n// // import { addToMyCart } from \"../store/ProductsStore\";\n// import { updateRemoteData } from \"../store/action\";\n// const stateMapProps = (state) => ({\n//   Prod: state.ProductReducer.listOfProducts,\n//   categories: state.CatReducer.categories,\n// });\n// const dispatchToProps = { updateRemoteData };\n// const styling = makeStyles({\n//   root: {\n//     maxWidth: 350,\n//     display: \"inline-block\",\n//     margin: 50,\n//   },\n//   media: {\n//     height: 245,\n//   },\n// });\n// function items(props) {\n//   // console.log(props);\n//   let calss = styling();\n//   return (\n//     <>\n//       {/* {props.Prod}  */}\n//       {/* <h1>Flowers</h1> */}\n//       <div className=\"cards\">\n//         {props.Prod.map((it, i) => {\n//           if (it.quantity === 0) {\n//             return;\n//           }\n//           return (\n//             <>\n//               <Card className={calss.root} key={i} id=\"cards\">\n//                 <CardMedia\n//                   className={calss.media}\n//                   image={it.image} />\n//                 <CardContent>\n//                   <Typography gutterBottom variant=\"h4\" >\n//                     {it.name}\n//                   </Typography>\n//                   <Typography variant=\"\" color=\"textSecondary\" component=\"p\">\n//                     {it.price}$\n//                   </Typography>\n//                 </CardContent>\n//                 <CardActions>\n//                   <Button size=\"small\" color=\"primary\"\n//                   onClick={() => props.updateRemoteData(it)}>\n//                     Add to Cart\n//                   </Button>\n//                   <Button size=\"small\" color=\"primary\">\n//                     View Details\n//                   </Button>\n//                 </CardActions>\n//               </Card>\n//             </>\n//           );\n//         })}\n//       </div>\n//     </>\n//   );\n// }\n// export default connect(stateMapProps, dispatchToProps)(items);\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\"; // import { addToCart } from \"../store/ProductsStore\";\n\nimport { updateRemoteData } from \"../store/action\";\nimport { Card, CardMedia, CardContent, Typography, CardActions, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 350,\n    display: \"inline-block\",\n    margin: 50\n  },\n  media: {\n    height: 240\n  }\n});\n\nfunction Products(props) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.Pro.map((item, idx) => {\n      if (item.inventory == 0) {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          id: \"cards\",\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            className: classes.media,\n            image: item.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"h2\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              component: \"p\",\n              children: [item.description, \" \", item.price, \"$\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              component: \"p\",\n              children: [\"Quantity Available: \", item.inventory]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              color: \"primary\",\n              onClick: () => props.updateRemoteData(item),\n              children: \"Add to Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              color: \"primary\",\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false);\n}\n\n_s(Products, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Products;\n\nconst mapStateToProps = state => ({\n  Pro: state.ProductReducer.productsList,\n  categories: state.CatReducer.categories\n});\n\nconst mapDispatchToProps = {\n  updateRemoteData\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/wafaa/storefront/src/components/Products.js"],"names":["React","connect","useDispatch","updateRemoteData","Card","CardMedia","CardContent","Typography","CardActions","Button","makeStyles","useStyles","root","maxWidth","display","margin","media","height","Products","props","classes","Pro","map","item","idx","inventory","image","name","description","price","mapStateToProps","state","ProductReducer","productsList","categories","CatReducer","mapDispatchToProps"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,SACEC,IADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,WALF,EAMEC,MANF,QAOO,mBAPP;AAQA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AAC3BE,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,GADN;AAEJC,IAAAA,OAAO,EAAE,cAFL;AAGJC,IAAAA,MAAM,EAAE;AAHJ,GADqB;AAM3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH;AANoB,CAAD,CAA5B;;AAWA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AAEA,sBACE;AAAA,cACGQ,KAAK,CAACE,GAAN,CAAUC,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5B,UAAID,IAAI,CAACE,SAAL,IAAkB,CAAtB,EAAyB;AACvB;AACD;;AAED,0BACE;AAAA,+BACE,QAAC,IAAD;AAAgB,UAAA,SAAS,EAAEL,OAAO,CAACR,IAAnC;AAAyC,UAAA,EAAE,EAAC,OAA5C;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,SAAS,EAAEQ,OAAO,CAACJ,KAA9B;AAAqC,YAAA,KAAK,EAAEO,IAAI,CAACG;AAAjD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,YAAY,MAAxB;AAAyB,cAAA,OAAO,EAAC,IAAjC;AAAsC,cAAA,SAAS,EAAC,IAAhD;AAAA,wBACGH,IAAI,CAACI;AADR;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,OAApB;AAA4B,cAAA,KAAK,EAAC,eAAlC;AAAkD,cAAA,SAAS,EAAC,GAA5D;AAAA,yBAEGJ,IAAI,CAACK,WAFR,OAEsBL,IAAI,CAACM,KAF3B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAQE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,OAApB;AAA4B,cAAA,KAAK,EAAC,eAAlC;AAAkD,cAAA,SAAS,EAAC,GAA5D;AAAA,iDACuBN,IAAI,CAACE,SAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAcE,QAAC,WAAD;AAAA,oCACE,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,KAAK,EAAC,SAFR;AAGE,cAAA,OAAO,EAAE,MAAMN,KAAK,CAAChB,gBAAN,CAAuBoB,IAAvB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,OAAb;AAAqB,cAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA,WAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AA+BD,KApCA;AADH,mBADF;AAyCD;;GA5CQN,Q;UACSP,S;;;KADTO,Q;;AA8CT,MAAMY,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,GAAG,EAAEU,KAAK,CAACC,cAAN,CAAqBC,YADQ;AAElCC,EAAAA,UAAU,EAAEH,KAAK,CAACI,UAAN,CAAiBD;AAFK,CAAZ,CAAxB;;AAKA,MAAME,kBAAkB,GAAG;AAAEjC,EAAAA;AAAF,CAA3B;AAEA,eAAeF,OAAO,CAAC6B,eAAD,EAAkBM,kBAAlB,CAAP,CAA6ClB,QAA7C,CAAf","sourcesContent":["// import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { Card, CardContent, CardMedia, CardActions, Typography, Button } from \"@material-ui/core\";\n// // import Typography from \"@material-ui/core/Typography\";\n// // import { addToMyCart } from \"../store/ProductsStore\";\n\n// import { updateRemoteData } from \"../store/action\";\n\n\n\n\n// const stateMapProps = (state) => ({\n\n//   Prod: state.ProductReducer.listOfProducts,\n//   categories: state.CatReducer.categories,\n// });\n\n// const dispatchToProps = { updateRemoteData };\n\n// const styling = makeStyles({\n//   root: {\n//     maxWidth: 350,\n//     display: \"inline-block\",\n//     margin: 50,\n//   },\n//   media: {\n//     height: 245,\n//   },\n// });\n\n// function items(props) {\n//   // console.log(props);\n//   let calss = styling();\n\n\n\n//   return (\n//     <>\n\n//       {/* {props.Prod}  */}\n//       {/* <h1>Flowers</h1> */}\n//       <div className=\"cards\">\n//         {props.Prod.map((it, i) => {\n//           if (it.quantity === 0) {\n//             return;\n//           }\n\n//           return (\n//             <>\n\n\n//               <Card className={calss.root} key={i} id=\"cards\">\n//                 <CardMedia\n//                   className={calss.media}\n//                   image={it.image} />\n//                 <CardContent>\n\n//                   <Typography gutterBottom variant=\"h4\" >\n//                     {it.name}\n//                   </Typography>\n\n//                   <Typography variant=\"\" color=\"textSecondary\" component=\"p\">\n//                     {it.price}$\n//                   </Typography>\n\n//                 </CardContent>\n\n//                 <CardActions>\n\n//                   <Button size=\"small\" color=\"primary\"\n//                   onClick={() => props.updateRemoteData(it)}>\n//                     Add to Cart\n//                   </Button>\n\n//                   <Button size=\"small\" color=\"primary\">\n//                     View Details\n//                   </Button>\n\n//                 </CardActions>\n//               </Card>\n\n\n//             </>\n//           );\n//         })}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default connect(stateMapProps, dispatchToProps)(items);\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n// import { addToCart } from \"../store/ProductsStore\";\nimport { updateRemoteData } from \"../store/action\";\n\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 350,\n    display: \"inline-block\",\n    margin: 50,\n  },\n  media: {\n    height: 240,\n  },\n});\n\nfunction Products(props) {\n  const classes = useStyles();\n\n  return (\n    <>\n      {props.Pro.map((item, idx) => {\n        if (item.inventory == 0) {\n          return;\n        }\n\n        return (\n          <>\n            <Card key={idx} className={classes.root} id=\"cards\" >\n              <CardMedia className={classes.media} image={item.image} />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {item.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\n                  {item.description} {item.price}$\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Quantity Available: {item.inventory}\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() => props.updateRemoteData(item)}\n                >\n                  Add to Cart\n                </Button>\n                <Button size=\"small\" color=\"primary\">\n                  View Details\n                </Button>\n              </CardActions>\n            </Card>\n          </>\n        );\n      })}\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  Pro: state.ProductReducer.productsList,\n  categories: state.CatReducer.categories,\n});\n\nconst mapDispatchToProps = { updateRemoteData };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n"]},"metadata":{},"sourceType":"module"}