{"ast":null,"code":"let myCart = {\n  cart: []\n};\n\nconst CartReducer = (state = myCart, action) => {\n  let {\n    type,\n    payload\n  } = action;\n  let myNewCart = [];\n\n  switch (type) {\n    case \"PUT\":\n      if (!state.cart.includes(payload.id)) {\n        myNewCart = [...state.cart, payload];\n      }\n\n      return { ...state,\n        cart: myNewCart\n      };\n\n    case \"PUT_REMOVE\":\n      let newCart = state.cart.filter(item => {\n        return item.name !== payload.name;\n      });\n      return { ...state,\n        cart: newCart\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = CartReducer;\nexport default CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["/home/wafaa/storefront/src/store/CartReducer.js"],"names":["myCart","cart","CartReducer","state","action","type","payload","myNewCart","includes","id","newCart","filter","item","name"],"mappings":"AACA,IAAIA,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AADK,CAAb;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,MAAT,EAAiBI,MAAjB,KAA4B;AAC9C,MAAI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAAxB;AACA,MAAIG,SAAS,GAAG,EAAhB;;AAEA,UAAQF,IAAR;AACE,SAAK,KAAL;AACE,UAAI,CAACF,KAAK,CAACF,IAAN,CAAWO,QAAX,CAAoBF,OAAO,CAACG,EAA5B,CAAL,EAAsC;AACpCF,QAAAA,SAAS,GAAG,CAAC,GAAGJ,KAAK,CAACF,IAAV,EAAgBK,OAAhB,CAAZ;AACD;;AACD,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,IAAI,EAAEM;AAAlB,OAAP;;AAEF,SAAK,YAAL;AACE,UAAIG,OAAO,GAAGP,KAAK,CAACF,IAAN,CAAWU,MAAX,CAAmBC,IAAD,IAAU;AACxC,eAAOA,IAAI,CAACC,IAAL,KAAcP,OAAO,CAACO,IAA7B;AACD,OAFa,CAAd;AAIA,aAAO,EAAE,GAAGV,KAAL;AAAYF,QAAAA,IAAI,EAAES;AAAlB,OAAP;;AAEF;AACE,aAAOP,KAAP;AAfJ;AAiBD,CArBD;;KAAMD,W;AAuBN,eAAeA,WAAf","sourcesContent":["\nlet myCart = {\n  cart: [],\n};\n\nconst CartReducer = (state = myCart, action) => {\n  let { type, payload } = action;\n  let myNewCart = [];\n\n  switch (type) {\n    case \"PUT\":\n      if (!state.cart.includes(payload.id)) {\n        myNewCart = [...state.cart, payload];\n      }\n      return { ...state, cart: myNewCart };\n\n    case \"PUT_REMOVE\":\n      let newCart = state.cart.filter((item) => {\n        return item.name !== payload.name;\n      });\n\n      return { ...state, cart: newCart };\n\n    default:\n      return state;\n  }\n};\n\nexport default CartReducer;\n"]},"metadata":{},"sourceType":"module"}