{"ast":null,"code":"var _jsxFileName = \"/home/wafaa/storefront/src/components/Products.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, CardMedia, CardActions, Typography, Button } from \"@material-ui/core\";\nimport { updateRemoteData } from \"../store/action\";\nimport { details } from \"../store/CategoryStore\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styling = makeStyles({\n  root: {\n    maxWidth: 350,\n    display: \"inline-block\",\n    margin: 50\n  },\n  media: {\n    height: 245\n  }\n});\n\nconst stateMapProps = state => ({\n  Pro: state.ProductReducer.productsList,\n  categories: state.CatReducer.categories\n});\n\nconst dispatchToProps = {\n  updateRemoteData\n};\n\nfunction Products(props) {\n  _s();\n\n  const classes = styling();\n  const state = useSelector(state => {\n    return {\n      Pro: state.Category.productsList,\n      categories: state.Category.categories\n    };\n  });\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: props.Pro.map((it, i) => {\n        if (it.inventory == 0) {\n          return;\n        }\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.root,\n            id: \"cards\",\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              className: classes.media,\n              image: it.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h5\",\n                component: \"h2\",\n                children: it.item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                component: \"p\",\n                children: [it.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Price: \", it.price, \" $\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                component: \"p\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Quantity Available: \", it.inventory]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/products/details\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  color: \"primary\",\n                  onClick: () => props.updateRemoteData(it),\n                  children: \"Add to Cart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  color: \"primary\",\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Products, \"lAwOUIsiQt7W5pDkNmeY6/8xQ4s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Products;\nexport default connect(stateMapProps, dispatchToProps)(Products);\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/wafaa/storefront/src/components/Products.js"],"names":["React","connect","makeStyles","Card","CardContent","CardMedia","CardActions","Typography","Button","updateRemoteData","details","useSelector","useDispatch","Link","styling","root","maxWidth","display","margin","media","height","stateMapProps","state","Pro","ProductReducer","productsList","categories","CatReducer","dispatchToProps","Products","props","classes","Category","dispatch","map","it","i","inventory","image","item","description","price"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, CardMedia, CardActions, Typography, Button } from \"@material-ui/core\";\nimport { updateRemoteData } from \"../store/action\";\n\nimport { details } from \"../store/CategoryStore\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n\n\nconst styling = makeStyles({\n  root: {\n    maxWidth: 350,\n    display: \"inline-block\",\n    margin: 50,\n  },\n  media: {\n    height: 245,\n  },\n});\n\n\nconst stateMapProps = (state) => ({\n  Pro: state.ProductReducer.productsList,\n  categories: state.CatReducer.categories,\n});\n\nconst dispatchToProps = { updateRemoteData };\n\n\nfunction Products(props) {\n  const classes = styling();\n\n\n  const state = useSelector((state) => {\n    return {\n      Pro: state.Category.productsList,\n      categories: state.Category.categories,\n    };\n  });\n\n  const dispatch = useDispatch();\n\n\n\n  return (\n    <>\n      <div className=\"cards\" >\n\n\n\n        {props.Pro.map((it, i) => {\n          if (it.inventory == 0) {\n            return;\n          }\n\n          return (\n            <>\n              <Card key={i} className={classes.root} id=\"cards\" >\n                <CardMedia className={classes.media} image={it.image} />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {it.item}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\n                    {it.description}\n\n                    <br></br>\n\n                    <h3>\n                      Price: {it.price} $\n                    </h3>\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    <h3>\n                      Quantity Available: {it.inventory}\n                    </h3>\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                <Link to=\"/products/details\">\n                  <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => props.updateRemoteData(it)}\n                  >\n                    Add to Cart\n                  </Button>\n                  <Button size=\"small\" color=\"primary\">\n                    View Details\n                  </Button>\n                  </Link>\n\n                </CardActions>\n              </Card>\n            </>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\n\n\nexport default connect(stateMapProps, dispatchToProps)(Products);\n"]},"metadata":{},"sourceType":"module"}