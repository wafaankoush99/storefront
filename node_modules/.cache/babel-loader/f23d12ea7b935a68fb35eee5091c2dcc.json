{"ast":null,"code":"var _jsxFileName = \"/home/wafaa/storefront/src/components/Products.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { updateRemoteData } from \"../store/CategoryStore\";\nimport { details } from \"../store/CategoryStore\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Card, CardMedia, CardContent, Typography, CardActions, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styling = makeStyles({\n  root: {\n    maxWidth: 350,\n    display: \"inline-block\",\n    margin: 50\n  },\n  media: {\n    height: 240\n  }\n});\n\nfunction Products() {\n  _s();\n\n  const classes = styling();\n  const state = useSelector(state => {\n    return {\n      Pro: state.Category.productsList,\n      categories: state.Category.categories\n    };\n  });\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainCards\",\n    children: [\" \", state.Pro.map((it, idx) => {\n      if (it.inventory == 0) {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              className: classes.media,\n              image: it.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h5\",\n                component: \"h2\",\n                children: it.item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                component: \"p\",\n                children: [item.description, \" \", item.price, \"$\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                component: \"p\",\n                children: [\"Quantity Available: \", item.inventory]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                onClick: () => dispatch(updateRemoteData(item)),\n                children: \"Add to Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/products/details\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  color: \"primary\",\n                  onClick: () => dispatch(details(item._id)),\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"lAwOUIsiQt7W5pDkNmeY6/8xQ4s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/wafaa/storefront/src/components/Products.js"],"names":["React","Link","updateRemoteData","details","useSelector","useDispatch","Card","CardMedia","CardContent","Typography","CardActions","Button","makeStyles","styling","root","maxWidth","display","margin","media","height","Products","classes","state","Pro","Category","productsList","categories","dispatch","map","it","idx","inventory","image","item","description","price","_id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { updateRemoteData } from \"../store/CategoryStore\";\nimport { details } from \"../store/CategoryStore\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst styling = makeStyles({\n  root: {\n    maxWidth: 350,\n    display: \"inline-block\",\n    margin: 50,\n  },\n  media: {\n    height: 240,\n  },\n});\n\nfunction Products() {\n  const classes = styling();\n\n  const state = useSelector((state) => {\n    return {\n      Pro: state.Category.productsList,\n      categories: state.Category.categories,\n    };\n  });\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"mainCards\">\n      {\" \"}\n      {state.Pro.map((it, idx) => {\n        if (it.inventory == 0) {\n          return;\n        }\n\n        return (\n          <>\n            <div className=\"cards\" >\n\n              <Card key={idx} className={classes.root}>\n                <CardMedia className={classes.media} image={it.image} />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {it.item}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {item.description} {item.price}$\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    Quantity Available: {item.inventory}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => dispatch(updateRemoteData(item))}\n                  >\n                    Add to Cart\n                  </Button>\n\n                  <Link to=\"/products/details\">\n                    <Button\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={() => dispatch(details(item._id))}\n                    >\n                      View Details\n                    </Button>\n                  </Link>\n                </CardActions>\n              </Card>\n\n\n            </div>\n\n          </>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}